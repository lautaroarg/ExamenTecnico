@page "/UsuarioForm"
@page "/UsuarioForm/{Id:int}"
@using Data
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager Nav

<h3>Usuario</h3>

<EditForm Model="oUsuario">
    <DataAnnotationsValidator/>
    <div class="container-fluid">

        <div class="form-group row mb-1">
            <label class="col-sm-3">Usuario</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="oUsuario.UserName"></InputText>
                <ValidationMessage For="(()=>oUsuario.UserName)"/>
            </div>
        </div>
        <div class="form-group row mb-1">
            <label class="col-sm-3">Nombre</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="oUsuario.Nombre"></InputText>
                <ValidationMessage For="(()=>oUsuario.Nombre)" />
            </div>
        </div>
        <div class="form-group row mb-1">
            <label class="col-sm-3">Email</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="oUsuario.Email"></InputText>
                <ValidationMessage For="(()=>oUsuario.Email)" />
            </div>
        </div>
        <div class="form-group row mb-1">
            <label class="col-sm-3">Telefono</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="oUsuario.Telefono"></InputText>
            </div>
        </div>
        <div class="form-group row mb-1">
            <div class="col-sm-12">
                <button class="btn btn-primary" @onclick="Save">Guardar</button>
                <button class="btn btn-secondary"@onclick="Cancelar">Cancelar</button>
            </div>
        </div>

    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    Usuario oUsuario = new Usuario();
    Respuesta<object> oRespuesta = new Respuesta<object>();
    Respuesta<Usuario> oRespuestaUsuario = new Respuesta<Usuario>();
    public string Url = "/usuarios";
    private void Cancelar() => Nav.NavigateTo("/usuarios");
    private async Task Save()
    {
        if (Id!=0)
        {
            var response = await Http.PutAsJsonAsync<Usuario>(Url, oUsuario);
            oRespuesta = response.Content.ReadFromJsonAsync<Respuesta<object>>().Result;
        }
        else
        {
            var response = await Http.PostAsJsonAsync<Usuario>(Url, oUsuario);
            oRespuesta = response.Content.ReadFromJsonAsync<Respuesta<object>>().Result;
        }

        Nav.NavigateTo("/usuarios");
    }
    protected override async Task OnInitializedAsync()
    {
        if (Id !=0)
        {
            oRespuestaUsuario = await Http.GetFromJsonAsync<Data.Respuesta<Usuario>>(Url+"/"+Id);
            oUsuario = oRespuestaUsuario.Data;
        }

    }
}
